{
  "openapi": "3.0.2",
  "info": {
    "title": "Use @title: '...' on your CDS service to provide a meaningful title.",
    "description": "Use @Core.LongDescription: '...' on your CDS service to provide a meaningful description.",
    "version": ""
  },
  "x-sap-api-type": "ODATAV4",
  "x-odata-version": "4.01",
  "x-sap-shortText": "Use @Core.Description: '...' on your CDS service to provide a meaningful short text.",
  "servers": [
    {
      "url": "/rest/supplier"
    }
  ],
  "tags": [],
  "paths": {
    "/$batch": {
      "post": {
        "summary": "Sends a group of requests",
        "description": "Group multiple requests into a single request payload, see [Batch Requests](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_BatchRequests).\n\n*Please note that \"Try it out\" is not supported for this request.*",
        "tags": [
          "Batch Requests"
        ],
        "requestBody": {
          "required": true,
          "description": "Batch request",
          "content": {
            "multipart/mixed;boundary=request-separator": {
              "schema": {
                "type": "string"
              },
              "example": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET undefined HTTP/1.1\nAccept: application/json\n\n\n--request-separator--"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch response",
            "content": {
              "multipart/mixed": {
                "schema": {
                  "type": "string"
                },
                "example": "--response-separator\nContent-Type: application/http\n\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{...}\n--response-separator--"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Approvals": {
      "get": {
        "summary": "Invokes function Approvals",
        "tags": [
          "Service Operations"
        ],
        "parameters": [
          {
            "required": false,
            "in": "query",
            "name": "suppliername",
            "description": "String value needs to be enclosed in single quotes",
            "schema": {
              "type": "string",
              "nullable": true,
              "pattern": "^(null|'([^']|'')*')$",
              "default": "null"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of return_SupplierService_Approvals",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/SupplierService.return_SupplierService_Approvals"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Approvers": {
      "get": {
        "summary": "Invokes function Approvers",
        "tags": [
          "Service Operations"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of approverinput",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/SupplierService.approverinput"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/approverentry": {
      "post": {
        "summary": "Invokes action approverentry",
        "tags": [
          "Service Operations"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "approverentry": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/SupplierService.approverinput"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/createSupplierWithFiles": {
      "post": {
        "summary": "Invokes action createSupplierWithFiles",
        "tags": [
          "Service Operations"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "supplierData": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/SupplierService.SupplierInput"
                      }
                    ],
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/downloadAttachments": {
      "get": {
        "summary": "Invokes function downloadAttachments",
        "tags": [
          "Service Operations"
        ],
        "parameters": [
          {
            "required": false,
            "in": "query",
            "name": "supplierName",
            "description": "String value needs to be enclosed in single quotes",
            "schema": {
              "type": "string",
              "nullable": true,
              "pattern": "^(null|'([^']|'')*')$",
              "default": "null"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of return_SupplierService_downloadAttachments",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/SupplierService.return_SupplierService_downloadAttachments"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/getsuppliers": {
      "get": {
        "summary": "Invokes function getsuppliers",
        "tags": [
          "Service Operations"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of SupplierInput",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/SupplierService.SupplierInput"
                          }
                        ],
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SupplierService.AdditionalInfoInput": {
        "title": "AdditionalInfoInput",
        "type": "object",
        "properties": {
          "details": {
            "type": "string",
            "maxLength": 100,
            "nullable": true
          }
        }
      },
      "SupplierService.AddressInput": {
        "title": "AddressInput",
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "maxLength": 200,
            "nullable": true
          },
          "line2": {
            "type": "string",
            "maxLength": 200,
            "nullable": true
          },
          "line3": {
            "type": "string",
            "maxLength": 200,
            "nullable": true
          },
          "city": {
            "type": "string",
            "maxLength": 100,
            "nullable": true
          },
          "postalCode": {
            "type": "string",
            "maxLength": 20,
            "nullable": true
          },
          "country": {
            "type": "string",
            "maxLength": 100,
            "nullable": true
          },
          "region": {
            "type": "string",
            "maxLength": 100,
            "nullable": true
          }
        }
      },
      "SupplierService.CategoryRegionInput": {
        "title": "CategoryRegionInput",
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "maxLength": 100,
            "nullable": true
          },
          "region": {
            "type": "string",
            "maxLength": 100,
            "nullable": true
          }
        }
      },
      "SupplierService.ContactInput": {
        "title": "ContactInput",
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "maxLength": 100,
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "maxLength": 100,
            "nullable": true
          },
          "email": {
            "type": "string",
            "maxLength": 200,
            "nullable": true
          },
          "phone": {
            "type": "string",
            "maxLength": 50,
            "nullable": true
          }
        }
      },
      "SupplierService.SupplierInput": {
        "title": "SupplierInput",
        "type": "object",
        "properties": {
          "supplierName": {
            "type": "string",
            "maxLength": 200,
            "nullable": true
          },
          "mainAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SupplierService.AddressInput"
              }
            ],
            "nullable": true
          },
          "primaryContact": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SupplierService.ContactInput"
              }
            ],
            "nullable": true
          },
          "categoryAndRegion": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SupplierService.CategoryRegionInput"
              }
            ],
            "nullable": true
          },
          "additionalInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SupplierService.AdditionalInfoInput"
              }
            ],
            "nullable": true
          }
        }
      },
      "SupplierService.approverinput": {
        "title": "approverinput",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100,
            "nullable": true
          },
          "email": {
            "type": "string",
            "maxLength": 200,
            "nullable": true
          },
          "country": {
            "type": "string",
            "maxLength": 50,
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "SupplierService.return_SupplierService_Approvals": {
        "title": "return_SupplierService_Approvals",
        "type": "object",
        "properties": {
          "level": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SupplierService.return_SupplierService_downloadAttachments": {
        "title": "return_SupplierService_downloadAttachments",
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "mimeType": {
            "type": "string",
            "nullable": true
          },
          "content": {
            "type": "string",
            "format": "base64url",
            "nullable": true
          }
        }
      },
      "count": {
        "anyOf": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "description": "The number of entities in the collection. Available when using the [$count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount) query option."
      },
      "error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "details": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    }
                  }
                }
              },
              "innererror": {
                "type": "object",
                "description": "The structure of this object is service-specific"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
        "schema": {
          "type": "integer",
          "minimum": 0
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
        "schema": {
          "type": "integer",
          "minimum": 0
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
        "schema": {
          "type": "boolean"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "error": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      }
    }
  }
}